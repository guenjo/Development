import {pingScript, dnsScript, hmiDownloaded} from "_PATH"

const ServiceIntern = {
  /**
   * ID des Timers für den zyklischen IP/DNS-Aufruf
   *
   * @type {number}
   */
  timerID: 0,

  /**
   * Erzeugt die Skripte um den DNS-Auflösung und das Pingen-nach-draußen zu testen
   * 
   * @returns {void}
   */
  CheckScripts: function() {
    let script =  "use Net::Ping;\n" +
                  "$host = '8.8.8.8';\n" +
                  "$p = Net::Ping->new() or die;\n" +
                  "if ($p->ping($host)) {\n" +
                    "print '2';\n" +
                  "} else {\n" +
                    "print '1';\n" +
                  "}\n" + 
                  "$p->close;\n";
    HMIRuntime.FileSystem.WriteFile(pingScript, script, "utf8");
  
    script =  "use Net::Ping;\n" +
              "$host = 'google.com';\n" +
              "$p = Net::Ping->new() or die;\n" +
              "if ($p->ping($host)) {\n" +
                "print '2';\n" +
              "} else {\n" +
                "print '1';\n" +
              "}\n" + 
              "$p->close;\n";
    HMIRuntime.FileSystem.WriteFile(dnsScript, script, "utf8");
  
    this.timerID = HMIRuntime.Timers.SetInterval(this.DoScripts, 1000); 
  },
  
  /**
   * Beendet den Timer für die zyklsiche IP/DNS-Prüfung
   * 
   * @returns {void}
   */
  ClearScripts: function() {
    if (this.timerID > 0) {
      HMIRuntime.Timers.ClearInterval(this.timerID);
      this.timerID = 0;
    }
  },

  /**
   * Führt die Perl-Skripte für die IP/DNS-Prüfung aus
   * 
   * @returns {void}
   */
  DoScripts: function() {
    // HMIRuntime.Device.SysFct.StartProgram("perl", pingScript, 0, true, HMIRuntime.Tags.SysFct.CreateSetTagCommand("PingState"));
    // HMIRuntime.Device.SysFct.StartProgram("perl", dnsScript, 0, true, HMIRuntime.Tags.SysFct.CreateSetTagCommand("DNSState"));
  },

  /**
   * Prüft, wann die HMI-Software zuletzt Downgeloaded wurde
   * 
   * @returns {void}
   */
  GetHMIChanged: function() {
    HMIRuntime.Device.SysFct.StartProgram("stat", "-c %y " + hmiDownloaded, 0, true, HMIRuntime.Tags.SysFct.CreateSetTagCommand("HMILastChange"));
  }  
}

export const ServiceExport = {
  /**
   * Erzeugt den Text für die Servicebeschreibung, je nach Typ
   * 
   * @param {string} type - Service Typ "A" oder "B"
   * @returns {string} - Servicetext für Textfeld
   */
  GetServiceText: function(type) {
    if (type == "A") {
      let ts = Tags.CreateTagSet(["DB_Maintenance_ServiceA_Remaining", "DB_Maintenance_ServiceA_Exceeded"]);
      ts.Read();
      
      let remain = ts[0].Value;
      let exceed = ts[1].Value;
      
      let text = "";
    
      if (exceed == 0) {
        text = HMIRuntime.Resources.TextLists("@Default.Service").Item(0).Item(HMIRuntime.Language);
        text = text.replace("{0}", remain);
      } else {
        text = HMIRuntime.Resources.TextLists("@Default.Service").Item(1).Item(HMIRuntime.Language);
        text = text.replace("{0}", exceed);
      }
      
      return text;
    } else {
      let ts = Tags.CreateTagSet(["DB_Maintenance_ServiceB_Remaining", "DB_Maintenance_ServiceB_Exceeded"]);
      ts.Read();
      
      let remain = ts[0].Value;
      let exceed = ts[1].Value;
      
      let text = "";
    
      if (exceed == 0) {
        text = HMIRuntime.Resources.TextLists("@Default.Service").Item(2).Item(HMIRuntime.Language);
        text = text.replace("{0}", remain);
      } else {
        text = HMIRuntime.Resources.TextLists("@Default.Service").Item(3).Item(HMIRuntime.Language);
        text = text.replace("{0}", exceed);
      }
      
      return text;
    }
  },

  /**
   * Automatisches Anmelden des weber-adm bei IBN und Bildwechsel auf Template
   * 
   * @param {WinCC.Input} eaAdmin - Eingabefeld für das Passwort
   * @returns {void}
   */
  ServiceIBN: function(eaAdmin) {
    HMIRuntime.Tags.SysFct.SetTagValue("DB_User_CurrentUser_ID", 9999);
    eaAdmin.BackColor = HMIRuntime.Math.RGB(0,255,0);
  
    HMIRuntime.Timers.SetTimeout(function() {
      HMIRuntime.UI.SysFct.ChangeScreen("TEMPLATE", "~");
    }, 100);
  }
}
/*<auto-generated>
***End of Global definition area***
Changes to this comment may cause incorrect behavior during document based import.
</auto-generated>*/
export function Event_Loaded() {
  ServiceIntern.GetHMIChanged();
  // ServiceIntern.CheckScripts();
}
export function Event_Unloaded() {
 // ServiceIntern.ClearScripts();
}
